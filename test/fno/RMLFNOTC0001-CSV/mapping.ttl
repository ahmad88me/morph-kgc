@prefix dbo: <http://dbpedia.org/ontology/> .
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix grel: <http://users.ugent.be/~bjdmeest/function/grel.ttl#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix fno:     <http://w3id.org/function/ontology#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .
@prefix : <http://oeg-upm.net/> .


:TriplesMap1
  a rr:TriplesMap;

  rml:logicalSource [
    rml:source "test/fno/RMLFNOTC0001-CSV/student.csv";
    rml:referenceFormulation ql:CSV
  ];

  rr:predicateObjectMap :NameMapping ;

  rr:subjectMap [
    rr:template "http://example.com/{Name}"
  ].



:NameMapping
    rr:predicate dbo:title ;
    rr:objectMap [                             # A function-valued term map
        fnml:execution :Execution ;          # Link to an FNML Execution
        fnml:return grel:stringOut             # Specify which return of the referenced function to use, if omitted, the first specified return is used
    ].

:Execution
    a fnml:Execution ;                # A new class
    fnml:function grel:toUpperCase ;           # Specify which FnO function
    fnml:input [                               # Specify the inputs
        a fnml:Input ;                         # A new class
        fnml:parameter grel:valueParam ;       # Specify this specific parameter
        fnml:valueMap [                        # Link to the term map that creates the input value
            rml:reference "name"               # Specify the reference within the data source
        ]
    ].

grel:toUpperCase
    a                   fno:Function ;
    fno:name            "to Uppercase" ;
    rdfs:label          "to Uppercase" ;
    dcterms:description "Returns the input with all letters in upper case." ;
    fno:solves          grel:prob_ucase ;
    fno:expects         ( grel:valueParam ) ;
    fno:returns         ( grel:stringOut ) .

grel:valueParam
    a             fno:Parameter ;
    fno:name      "input value" ;
    rdfs:label    "input value" ;
    fno:predicate grel:valueParameter ;
    fno:type      xsd:string ;
    fno:required  "true"^^xsd:boolean .

grel:stringOut
    a             fno:Output ;
    fno:name      "output string" ;
    rdfs:label    "output string" ;
    fno:predicate grel:stringOutput ;
    fno:type      xsd:string .